{"ast":null,"code":"var _jsxFileName = \"/Users/davidzagardo/Dropbox/My Mac (Davids-MacBook-Pro.local)/Desktop/SCHOOL/SPRING2022/PSC/hw6-analytics-framework-marcosoft/hw6-wzc-public-main/frontend/src/App.tsx\";\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PluginButton extends React.Component {\n  render() {\n    // The plugin to be chosen when initializing the framework.\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: this.props.onClick,\n      children: this.props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      state: 'busy',\n      pluginNames: []\n    };\n    this.handleNewFramework = this.handleNewFramework.bind(this);\n  }\n\n  componentDidMount() {\n    // fetch json after refreshing.\n    void this.initDashBoard();\n  }\n\n  stateUpdate(json) {\n    // Update the state after fetching the JSON.\n    this.setState({\n      state: json.state,\n      pluginNames: json.pluginNames\n    });\n  }\n\n  async initDashBoard() {\n    const response = await fetch('fetch');\n    const json = await response.json();\n    this.stateUpdate(json);\n  }\n\n  async handleClick(index) {\n    // Handle the event that the user clicks on a plugin.\n    if (this.state.state === 'chooseVisualizationPlugin') {\n      this.setState({\n        state: 'busy'\n      });\n    }\n\n    const response = await fetch(`click?index=${index}`);\n    const json = await response.json();\n    this.stateUpdate(json);\n  }\n\n  async handleNewFramework() {\n    // Handle the event that the user clicks on the start again button.\n    const response = await fetch('new');\n    const json = await response.json();\n    this.stateUpdate(json);\n  }\n\n  renderPlugin() {\n    // Render all the buttons for choosing plugins.\n    const plugins = [];\n\n    for (let i = 0; i < this.state.pluginNames.length; i++) {\n      plugins.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(PluginButton, {\n          name: this.state.pluginNames[i],\n          onClick: async e => await this.handleClick(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this));\n    }\n\n    return plugins;\n  }\n\n  render() {\n    if (this.state.state === 'busy') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"infotext\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"The object detection web API is \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"slow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 45\n          }, this), \". Please wait. Thank you for your patience.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"In average, it takes 0.3 seconds to process 1 image.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"The visualization webpage will pop up in your browser after receiving the response from web API.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this);\n    } else if (this.state.state === 'finish') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"infotext\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"The framework finishes running. The webpage of visualization is poped up in your browser. Click on the button below to use the framework again.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: this.handleNewFramework,\n          children: \"Start Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this);\n    } else if (this.state.state === 'error') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"infotext\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Oops! There is something wrong about the web api. Here's what might happen:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"1. You add too many images in the data plugin.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"2. Your account is restricted because of frequent use (most likely).\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Solution: register a new account and acquire a new API key.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sorry for the inconvience. The web API is free, so your account could be restricted for frequent use.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"If you have difficulty registering a new account, please contact us: yifanz7@andrew.cmu.edu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Click on the button below to use the framework again.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: this.handleNewFramework,\n          children: \"Start Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this);\n    } else if (this.state.state === 'chooseDataPlugin') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"infotext\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please choose a data plugin.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), this.renderPlugin()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"infotext\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please choose a visualization plugin.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), this.renderPlugin()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/davidzagardo/Dropbox/My Mac (Davids-MacBook-Pro.local)/Desktop/SCHOOL/SPRING2022/PSC/hw6-analytics-framework-marcosoft/hw6-wzc-public-main/frontend/src/App.tsx"],"names":["React","PluginButton","Component","render","props","onClick","name","App","constructor","state","pluginNames","handleNewFramework","bind","componentDidMount","initDashBoard","stateUpdate","json","setState","response","fetch","handleClick","index","renderPlugin","plugins","i","length","push","e"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './App.css'\n\ninterface PluginProps {\n  name: string\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => Promise<void>\n}\n\ninterface DashBoard {\n  state: string\n  pluginNames: string[]\n}\n\nclass PluginButton extends React.Component<PluginProps, {}> {\n  render (): JSX.Element {\n    // The plugin to be chosen when initializing the framework.\n    return (\n      <button className='button' onClick={this.props.onClick}>\n        {this.props.name}\n      </button>\n    )\n  }\n}\n\nclass App extends React.Component<{}, DashBoard> {\n  constructor (props: {}) {\n    super(props)\n    this.state = {\n      state: 'busy',\n      pluginNames: []\n    }\n    this.handleNewFramework = this.handleNewFramework.bind(this)\n  }\n\n  componentDidMount (): void {\n    // fetch json after refreshing.\n    void this.initDashBoard()\n  }\n\n  stateUpdate (json: any): void {\n    // Update the state after fetching the JSON.\n    this.setState({\n      state: json.state,\n      pluginNames: json.pluginNames\n    })\n  }\n\n  async initDashBoard (): Promise<void> {\n    const response = await fetch('fetch')\n    const json = await response.json()\n    this.stateUpdate(json)\n  }\n\n  async handleClick (index: number): Promise<void> {\n    // Handle the event that the user clicks on a plugin.\n    if (this.state.state === 'chooseVisualizationPlugin') {\n      this.setState({\n        state: 'busy'\n      })\n    }\n    const response = await fetch(`click?index=${index}`)\n    const json = await response.json()\n    this.stateUpdate(json)\n  }\n\n  async handleNewFramework (): Promise<void> {\n    // Handle the event that the user clicks on the start again button.\n    const response = await fetch('new')\n    const json = await response.json()\n    this.stateUpdate(json)\n  }\n\n  renderPlugin (): JSX.Element[] {\n    // Render all the buttons for choosing plugins.\n    const plugins: JSX.Element[] = []\n    for (let i = 0; i < this.state.pluginNames.length; i++) {\n      plugins.push(\n        <div key={i}>\n          <PluginButton\n            name={this.state.pluginNames[i]}\n            onClick={async (e: React.MouseEvent<HTMLButtonElement>) => await this.handleClick(i)}\n          />\n        </div>\n      )\n    }\n    return plugins\n  }\n\n  render (): JSX.Element {\n    if (this.state.state === 'busy') {\n      return (\n        <div className='infotext'>\n          <p>\n            The object detection web API is <span>slow</span>. Please wait. Thank you for your patience.\n          </p>\n          <p>\n            In average, it takes 0.3 seconds to process 1 image.\n          </p>\n          <p>\n            The visualization webpage will pop up in your browser after receiving the response from web API.\n          </p>\n        </div>\n      )\n    } else if (this.state.state === 'finish') {\n      return (\n        <div className='infotext'>\n          <p>\n            The framework finishes running. The webpage of visualization is poped up in your browser. Click on the button below to use the framework again.\n          </p>\n          <button className='button' onClick={this.handleNewFramework}>\n            Start Again\n          </button>\n        </div>\n      )\n    } else if (this.state.state === 'error') {\n      return (\n        <div className='infotext'>\n          <p>\n            Oops! There is something wrong about the web api. Here's what might happen:\n          </p>\n          <p>\n            1. You add too many images in the data plugin.\n          </p>\n          <p>\n            2. Your account is restricted because of frequent use (most likely).\n          </p>\n          <p>\n            Solution: register a new account and acquire a new API key.\n          </p>\n          <p>\n            Sorry for the inconvience. The web API is free, so your account could be restricted for frequent use.\n          </p>\n          <p>\n            If you have difficulty registering a new account, please contact us: yifanz7@andrew.cmu.edu\n          </p>\n          <p>\n            Click on the button below to use the framework again.\n          </p>\n          <button className='button' onClick={this.handleNewFramework}>\n            Start Again\n          </button>\n        </div>\n      )\n    } else if (this.state.state === 'chooseDataPlugin') {\n      return (\n        <div className='infotext'>\n          <p>\n            Please choose a data plugin.\n          </p>\n          {this.renderPlugin()}\n        </div>\n      )\n    } else {\n      return (\n        <div className='infotext'>\n          <p>\n            Please choose a visualization plugin.\n          </p>\n          {this.renderPlugin()}\n        </div>\n      )\n    }\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}